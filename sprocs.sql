DELIMITER //

CREATE PROCEDURE GetAllLocations()
BEGIN
	SELECT * FROM LOCATIONS;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE GetMachinesAtLocation(LOCATION INT)
BEGIN
	SELECT ID, SPECIFICLOCATION FROM MACHINES AS M WHERE M.LOCATIONID = LOCATION;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE GetItemsAtMachine(MACHINE INT)
BEGIN
	SELECT I.ID, NAME
    FROM (SELECT * FROM STOCKED_ITEMS AS SI WHERE SI.MACHINEID = MACHINE) AS MSI 
    INNER JOIN ITEMS AS I
    ON MSI.ITEMID = I.ID;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE GetAllItems()
BEGIN
	SELECT ID, NAME FROM ITEMS;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE GetDetailsOfItem(ITEM INT)
BEGIN
	SELECT NAME, DESCRIPTION FROM ITEMS WHERE ID = ITEM;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE GetMachinesWithItem(ITEM INT)
BEGIN
	SELECT M.ID, M.LOCATIONID, SID.TIMESTAMP
	FROM MACHINES AS M
	INNER JOIN (SELECT SI.MACHINEID, SI.TIMESTAMP FROM STOCKED_ITEMS AS SI WHERE SI.ITEMID = ITEM) AS SID
	ON M.ID = SID.MACHINEID;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE GetItemIdOfOldestEntryForMachine(MACHINE INT)
BEGIN
	SELECT ITEMID
	FROM STOCKED_ITEMS 
    WHERE MACHINEID = 1 
    ORDER BY TIMESTAMP ASC
    LIMIT 1;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE RemoveEntryForItem(MACHINE INT, ITEM INT)
BEGIN
	DELETE FROM STOCKED_ITEMS
    WHERE STOCKED_ITEMS.MACHINE = MACHINE AND STOCKED_ITEMS.ITEMID = ITEM;
END //

DELIMITER ;

DELIMITER //

CREATE PROCEDURE AddEntryForItem(MACHINE INT, ITEM INT)
BEGIN
	INSERT IGNORE INTO STOCKED_ITEMS (MACHINEID, ITEMID, TIMESTAMP, CERTAINTY, TAG)
    VALUES (MACHINE, ITEM, NOW(), 0, "");
END //

DELIMITER ;